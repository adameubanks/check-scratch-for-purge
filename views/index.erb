<html>
<head>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.1/css/all.css">
</head>
<body>  
  <nav class="navbar navbar-expand-lg navbar-dark" style="background-color: #53565a;">
    <a class="navbar-brand" href="/pun/sys/dashboard/">UVA Open OnDemand</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
  </nav>
  <div class="container">
    <br>
    <h1>Check <span style="font-family: monospace; background-color: #f2f2f2;">/scratch</span> for purge</h1><br>
    <div class="row justify-content-center">
      <div class="col-auto">
        <button id="toggleOutputBtn" class="btn btn-primary">Show Output</button>
      </div>
      <div class="col-auto">
        <h3> Or </h3>
      </div>
      <div class="col-auto">
        <button id="download" class="btn btn-primary">Download Output</button>
      </div>
    </div>
    <div id="outputSection" style="display: none;">
      <% if error %>
        <p>Error: <%= error %></p>
      <% else %>
        <p>These files will be purged:</p>
        <ul>
          <% processes.each do |process| %>
            <li><%= process %></li>
          <% end %>
        </ul>
      <% end %>
    </div>
  </div>
  <script>
    document.addEventListener('DOMContentLoaded', (event) => {
      document.getElementById('toggleOutputBtn').addEventListener('click', function() {
        var outputSection = document.getElementById('outputSection');
        if (outputSection) { // Check if the element exists
          if (outputSection.style.display === 'none') {
            outputSection.style.display = 'block';
            this.textContent = 'Hide Output';
          } else {
            outputSection.style.display = 'none';
            this.textContent = 'Show Output';
          }
        } else {
          console.error('Element with ID "outputSection" not found.');
        }
      });
      document.getElementById('download').addEventListener('click', function() {
        var outputSection = document.getElementById('outputSection');
        var textToDownload = outputSection.innerText; // Get the text content of outputSection
        var blob = new Blob([textToDownload], { type: 'text/plain' }); // Create a Blob from the text
        var url = URL.createObjectURL(blob); // Create a URL for the Blob

        // Create a temporary anchor (`<a>`) element to trigger the download
        var downloader = document.createElement('a');
        downloader.href = url; // Set the href to the Blob URL
        downloader.download = 'output.txt'; // Set the default filename for the download

        // Append the anchor to the body, click it, and then remove it
        document.body.appendChild(downloader);
        downloader.click();
        document.body.removeChild(downloader);
        // Revoke the Blob URL to free up resources
        URL.revokeObjectURL(url);
      });
    });
  </script>
</body>
</html>