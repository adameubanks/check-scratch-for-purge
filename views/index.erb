<!DOCTYPE html>
<html>
<head>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.1/css/all.css">
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark" style="background-color: #53565a;">
    <a class="navbar-brand" href="/pun/sys/dashboard/">UVA Open OnDemand</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
  </nav>
  <div class="container">
    <br>
    <h1>Check <span style="font-family: monospace; background-color: #f2f2f2;">/scratch</span> for purge</h1><br>
    <div class="row justify-content-center">
      <div class="buttons">
        <button class="btn btn-primary m-2" onclick="toggleOutput()">Show Output</button>
        <a class="btn btn-secondary m-2" href="/downloadToHome">Download to Home</a>
        <a class="btn btn-secondary m-2" href="/downloadToScratch">Download to Scratch</a>
        <button class="btn btn-secondary m-2" onclick="downloadLocally()">Download Locally</button>
      </div>
    </div>
    <div id="output" class="mt-4" style="display: none;">
      <p>The following <%= @output.size %> files will be purged:</p>
      <ul>
        <div id="fileList">
          <% @output.each do |line| %>
          <li><%= line %></li>
          <% end %>
        </div>
      </ul>
    </div>
  </div>
  <script>
    function toggleOutput() {
      const outputSection = document.getElementById('output');
      if (outputSection.style.display === 'none' || outputSection.style.display === '') {
        outputSection.style.display = 'block';
      } else {
        outputSection.style.display = 'none';
      }
    }

    function downloadLocally() {
      // get files and format them for download
      const outputSection = document.getElementById('fileList');
      const textContent = outputSection.innerText
        .split('\n')
        .map(line => line.trim())
        .filter(line => line.length > 0)
        .join('\n');
      const blob = new Blob([textContent], { type: 'text/plain' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = 'scratchFilesToBePurged.txt';
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
    }
  </script>
</body>
</html>
